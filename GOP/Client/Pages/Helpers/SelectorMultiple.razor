
<div class="d-flex justify-content-start">
    <div class="my-2 mx-5">No Seleccionado</div>
    <div class="my-2 mx-5">Seleccionado</div>
</div>
<div class="d-flex selector-multiple">
    <ul class="selectable-ul">
        @foreach (var item in NoSeleccionados)
        {
            <li @onclick="@(() => Seleccionar(item))"><font size="2">@item.Valor</font></li>
        }
    </ul>

    <div class="selector-multiple-botones">
        <button @onclick="SeleccionarTodo">>></button>
        <button @onclick="DeseleccionarTodo"> @removerTodoTexto </button>
    </div>

    <ul class="selectable-ul">
        @foreach (var item in Seleccionados)
        {
            <li @onclick="(() => Deseleccionar(item))"><font size="2">@item.Valor</font></li>
        }
    </ul>
</div>



<style>
    .selector-multiple {
        display: flex;
    }

    .selectable-ul {
        height: 200px;
        overflow-y: auto;
        list-style-type: none;
        width: 170px;
        padding: 0;
        border-radius: 3px;
        border: 1px solid #ccc;
    }

        .selectable-ul li {
            cursor: pointer;
            border-bottom: 1px #eee solid;
            padding: 2px 10px;
            font-size: 14px;
        }

            .selectable-ul li:hover {
                background-color: #08c;
            }

    .selector-multiple-botones {
        display: flex;
        flex-direction: column;
        justify-content: center;
        padding: 5px;
    }

        .selector-multiple-botones button {
            margin: 5px;
        }
</style>

@code {

    [Parameter] public List<SelectorMultipleModel> NoSeleccionados { get; set; } = new List<SelectorMultipleModel>();
    [Parameter] public List<SelectorMultipleModel> Seleccionados { get; set; } = new List<SelectorMultipleModel>();

    private string removerTodoTexto = "<<";

    private void Seleccionar(SelectorMultipleModel item)
    {
        NoSeleccionados.Remove(item);
        Seleccionados.Add(item);
    }

    private void Deseleccionar(SelectorMultipleModel item)
    {
        Seleccionados.Remove(item);
        NoSeleccionados.Add(item);
    }

    private void SeleccionarTodo()
    {
        Seleccionados.AddRange(NoSeleccionados);
        NoSeleccionados.Clear();
    }

    private void DeseleccionarTodo()
    {
        NoSeleccionados.AddRange(Seleccionados);
        Seleccionados.Clear();
    }
}
