<EditForm Model="@unidad" OnValidSubmit="@OnValidSubmit">
    <div class="form-field mt-2 mb-2">
        <div class="form-group row p-2">
            <label class="col-3 col-form-label">Código de Unidad</label>
            <div class="col">
                <div class="input-group">
                    <InputText @bind-Value="@unidad.CodUnidad" oninput="this.value=this.value.toUpperCase()" placeholder="Código de unidad" class="form-control" />
                </div>
                <ValidationMessage For="@(() => unidad.CodUnidad)" />
            </div>
        </div>

        <div class="form-group row p-2">
            <label class="col-3 col-form-label">Descripción de Unidad</label>
            <div class="col">
                <div class="input-group">
                    <InputText @bind-Value="@unidad.DescUnidad" placeholder="Descripción de Unidad" class="form-control"/>
                </div>
                <ValidationMessage For="@(() => unidad.DescUnidad)" />
            </div>
        </div>

        <div class="d-flex justify-content-end">
            <button type="submit" class="btn btn-block btn-success">
                <i class="oi oi-check "></i>
                <text style="color:white"> @TextBotonSubmit</text>
            </button>
        </div>
    </div>
    <DataAnnotationsValidator />
</EditForm>

@code {
    [Parameter] public UnidadesDTO unidad { get; set; } = new UnidadesDTO();
    [Parameter] public string TextBotonSubmit { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }
}