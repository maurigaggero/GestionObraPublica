// <auto-generated />
using System;
using IISPI.BD.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IISPI.BD.Migrations
{
    [DbContext(typeof(BDContext))]
    [Migration("20220608033508_inicio")]
    partial class inicio
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("IISPI.BD.Data.Entity.Certificado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ContratoId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdCrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZonaProfesionalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContratoId");

                    b.HasIndex("ZonaProfesionalId");

                    b.ToTable("Certificados");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.CertificadoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aceptado")
                        .HasColumnType("bit");

                    b.Property<decimal>("CantidadMedida")
                        .HasColumnType("Decimal(10,3)");

                    b.Property<decimal>("CantidadTotal")
                        .HasColumnType("Decimal(10,3)");

                    b.Property<int>("CertificadoId")
                        .HasColumnType("int");

                    b.Property<string>("CodItem")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<decimal>("Coeficiente")
                        .HasColumnType("Decimal(10,3)");

                    b.Property<string>("DescItem")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdCrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemContratoId")
                        .HasColumnType("int");

                    b.Property<string>("Obs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ItemContratoId");

                    b.HasIndex(new[] { "CertificadoId", "ItemContratoId" }, "CertificadoItem_Certificado_ItemContrato_UQ")
                        .IsUnique();

                    b.ToTable("CertificadoItems");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.CertificadoItemControl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aceptado")
                        .HasColumnType("bit");

                    b.Property<int?>("CertificadoItemControlId")
                        .HasColumnType("int");

                    b.Property<int>("CertificadoItemId")
                        .HasColumnType("int");

                    b.Property<string>("CodControl")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("ContratoItemControlId")
                        .HasColumnType("int");

                    b.Property<string>("DescControl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdCrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Obs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CertificadoItemControlId");

                    b.HasIndex("ContratoItemControlId");

                    b.HasIndex(new[] { "CertificadoItemId", "CodControl" }, "CertificadoItemControl_CertificadoItem_CodControl_UQ")
                        .IsUnique();

                    b.HasIndex(new[] { "CertificadoItemId", "ContratoItemControlId" }, "CertificadoItemControl_CertificadoItem_ContratoItemControl_UQ")
                        .IsUnique();

                    b.ToTable("CertificadoItemControles");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.CertificadoItemControlDoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CertificadoItemControlId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdCrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PathDoc")
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.HasKey("Id");

                    b.HasIndex("CertificadoItemControlId");

                    b.ToTable("CertificadoItemControlDocs");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.CertificadoItemControlParam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CertificadoItemControlId")
                        .HasColumnType("int");

                    b.Property<string>("Descripción")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdCrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parametro")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("UnidadId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorMaximo")
                        .HasColumnType("Decimal(10,3)");

                    b.Property<decimal>("ValorMedido")
                        .HasColumnType("Decimal(10,3)");

                    b.Property<decimal>("ValorMinimo")
                        .HasColumnType("Decimal(10,3)");

                    b.HasKey("Id");

                    b.HasIndex("UnidadId");

                    b.HasIndex(new[] { "CertificadoItemControlId", "Parametro" }, "CertificadoItemControlParam_ItemControlId_Parametro_UQ")
                        .IsUnique();

                    b.ToTable("CertificadoItemControlParams");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.Contrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Caratula")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdCrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumExpediente")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZonaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("ZonaId");

                    b.HasIndex(new[] { "NumExpediente" }, "Contrato_UQ")
                        .IsUnique();

                    b.ToTable("Contratos");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.ContratoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("CantidadTotal")
                        .HasColumnType("Decimal(10,3)");

                    b.Property<string>("CodItem")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("ContratoId")
                        .HasColumnType("int");

                    b.Property<string>("DescItem")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdCrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex(new[] { "ContratoId", "ItemId", "CodItem" }, "ContratoItem_Contrato_Item_CodItem_UQ")
                        .IsUnique();

                    b.ToTable("ContratoItems");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.ContratoItemControl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CodControl")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("ContratoItemId")
                        .HasColumnType("int");

                    b.Property<string>("DescControl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdCrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemControlId")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ItemControlId");

                    b.HasIndex(new[] { "ContratoItemId", "CodControl" }, "ContratoItemControl_ContratoItem_CodControl_UQ")
                        .IsUnique();

                    b.HasIndex(new[] { "ContratoItemId", "ItemControlId" }, "ContratoItemControl_ContratoItem_ItemControl_UQ")
                        .IsUnique();

                    b.ToTable("ContratoItemControles");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.ContratoItemControlDoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ContratoItemControlId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdCrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PathDoc")
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.HasKey("Id");

                    b.HasIndex("ContratoItemControlId");

                    b.ToTable("ContratoItemControlDocs");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.ContratoItemControlParam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ContratoItemControlId")
                        .HasColumnType("int");

                    b.Property<int>("ContratoItemControllId")
                        .HasColumnType("int");

                    b.Property<string>("Descripción")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdCrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parametro")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("UnidadId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorMaximo")
                        .HasColumnType("Decimal(10,3)");

                    b.Property<decimal>("ValorMinimo")
                        .HasColumnType("Decimal(10,3)");

                    b.HasKey("Id");

                    b.HasIndex("ContratoItemControlId");

                    b.HasIndex("UnidadId");

                    b.HasIndex(new[] { "ContratoItemControllId", "Parametro" }, "CertificadoItemControlParam_ItemControlId_Parametro_UQ")
                        .IsUnique()
                        .HasDatabaseName("CertificadoItemControlParam_ItemControlId_Parametro_UQ1");

                    b.ToTable("ContratoItemControlParams");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CUIT")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdCrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CUIT" }, "Empresal_CUIT_UQ")
                        .IsUnique();

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.EmpresaProfesional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DescFuncProf")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdCrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.HasIndex(new[] { "EmpresaId", "PersonaId" }, "EmpresaProfesional_Empresa_Persona_FuncionProfesional_UQ")
                        .IsUnique();

                    b.ToTable("EmpresaProfesionales");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.FrenteObra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CodFrenteObra")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdCrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreFrenteObra")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZonaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ZonaId", "CodFrenteObra" }, "FrenteObra_Zona_CodFrenteObra_UQ")
                        .IsUnique();

                    b.ToTable("FrenteObras");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.FrenteObraProfesional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DescFuncProf")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FrenteObraId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("IdCrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.HasIndex(new[] { "FrenteObraId", "PersonaId" }, "FrenteObraProfesional_FrenteObra_Persona_FuncionProfesional_UQ")
                        .IsUnique();

                    b.ToTable("FrenteObraProfesionales");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CodItem")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("DescItem")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdCrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnidadId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnidadId");

                    b.HasIndex(new[] { "CodItem" }, "Item_CodItem_UQ")
                        .IsUnique();

                    b.ToTable("Items");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.ItemControl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CodControl")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("DescControl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdCrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ItemId", "CodControl" }, "ItemControl_CodControl_UQ")
                        .IsUnique();

                    b.ToTable("ItemControles");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.ItemControlDoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdCrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemControlId")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PathDoc")
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.HasKey("Id");

                    b.HasIndex("ItemControlId");

                    b.ToTable("ItemControlDocs");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.ItemControlParam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripción")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdCrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemControlId")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parametro")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("UnidadId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorMaximo")
                        .HasColumnType("Decimal(10,3)");

                    b.Property<decimal>("ValorMinimo")
                        .HasColumnType("Decimal(10,3)");

                    b.HasKey("Id");

                    b.HasIndex("UnidadId");

                    b.HasIndex(new[] { "ItemControlId", "Parametro" }, "ItemControlParam_ItemControlId_Parametro_UQ")
                        .IsUnique();

                    b.ToTable("ItemControlParams");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdCrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "DNI" }, "PersonaDNI_UQ")
                        .IsUnique();

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.Unidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CodUnidad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DescUnidad")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdCrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CodUnidad" }, "Unidad_CodUnidad_UQ")
                        .IsUnique();

                    b.ToTable("Unidades");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.Zona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CodigoZona")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdCrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreZona")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CodigoZona" }, "Zona_CodigoZona_UQ")
                        .IsUnique();

                    b.ToTable("Zonas");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.ZonaProfesional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DescFuncProf")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdCrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<int>("ZonaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.HasIndex(new[] { "ZonaId", "PersonaId" }, "ZonaProfesional_Zona_Persona_FuncionProfesional_UQ")
                        .IsUnique();

                    b.ToTable("ZonaProfesionales");
                });

            modelBuilder.Entity("IISPI.BD.Data.IISPIUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonaId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("PersonaId");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.Certificado", b =>
                {
                    b.HasOne("IISPI.BD.Data.Entity.Contrato", "Contrato")
                        .WithMany()
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IISPI.BD.Data.Entity.ZonaProfesional", "ZonaProfesional")
                        .WithMany()
                        .HasForeignKey("ZonaProfesionalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Contrato");

                    b.Navigation("ZonaProfesional");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.CertificadoItem", b =>
                {
                    b.HasOne("IISPI.BD.Data.Entity.Certificado", "Certificado")
                        .WithMany("CertificadoItems")
                        .HasForeignKey("CertificadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IISPI.BD.Data.Entity.ContratoItem", "ItemContrato")
                        .WithMany()
                        .HasForeignKey("ItemContratoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Certificado");

                    b.Navigation("ItemContrato");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.CertificadoItemControl", b =>
                {
                    b.HasOne("IISPI.BD.Data.Entity.CertificadoItemControl", null)
                        .WithMany("DocumentosControl")
                        .HasForeignKey("CertificadoItemControlId");

                    b.HasOne("IISPI.BD.Data.Entity.CertificadoItem", "CertificadoItem")
                        .WithMany("CertificadoItemControls")
                        .HasForeignKey("CertificadoItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IISPI.BD.Data.Entity.ContratoItemControl", "ContratoItemControl")
                        .WithMany()
                        .HasForeignKey("ContratoItemControlId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CertificadoItem");

                    b.Navigation("ContratoItemControl");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.CertificadoItemControlDoc", b =>
                {
                    b.HasOne("IISPI.BD.Data.Entity.CertificadoItemControl", "CertificadoItemControl")
                        .WithMany()
                        .HasForeignKey("CertificadoItemControlId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CertificadoItemControl");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.CertificadoItemControlParam", b =>
                {
                    b.HasOne("IISPI.BD.Data.Entity.CertificadoItemControl", "CertificadoItemControl")
                        .WithMany()
                        .HasForeignKey("CertificadoItemControlId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IISPI.BD.Data.Entity.Unidad", "Unidad")
                        .WithMany()
                        .HasForeignKey("UnidadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CertificadoItemControl");

                    b.Navigation("Unidad");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.Contrato", b =>
                {
                    b.HasOne("IISPI.BD.Data.Entity.Empresa", "Empresa")
                        .WithMany("ContratoObras")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IISPI.BD.Data.Entity.Zona", "Zona")
                        .WithMany("Contratos")
                        .HasForeignKey("ZonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Zona");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.ContratoItem", b =>
                {
                    b.HasOne("IISPI.BD.Data.Entity.Contrato", "Contrato")
                        .WithMany("ContratoItems")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IISPI.BD.Data.Entity.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Contrato");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.ContratoItemControl", b =>
                {
                    b.HasOne("IISPI.BD.Data.Entity.ContratoItem", "ContratoItem")
                        .WithMany("ContratoItemControls")
                        .HasForeignKey("ContratoItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IISPI.BD.Data.Entity.ItemControl", "ItemControl")
                        .WithMany()
                        .HasForeignKey("ItemControlId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ContratoItem");

                    b.Navigation("ItemControl");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.ContratoItemControlDoc", b =>
                {
                    b.HasOne("IISPI.BD.Data.Entity.ContratoItemControl", "ContratoItemControl")
                        .WithMany("Documentos")
                        .HasForeignKey("ContratoItemControlId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ContratoItemControl");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.ContratoItemControlParam", b =>
                {
                    b.HasOne("IISPI.BD.Data.Entity.ContratoItemControl", "ContratoItemControl")
                        .WithMany("Parametros")
                        .HasForeignKey("ContratoItemControlId");

                    b.HasOne("IISPI.BD.Data.Entity.Unidad", "Unidad")
                        .WithMany()
                        .HasForeignKey("UnidadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ContratoItemControl");

                    b.Navigation("Unidad");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.EmpresaProfesional", b =>
                {
                    b.HasOne("IISPI.BD.Data.Entity.Empresa", "Empresa")
                        .WithMany("EmpresaProfesionales")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IISPI.BD.Data.Entity.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.FrenteObra", b =>
                {
                    b.HasOne("IISPI.BD.Data.Entity.Zona", "Zona")
                        .WithMany("FrenteObras")
                        .HasForeignKey("ZonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Zona");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.FrenteObraProfesional", b =>
                {
                    b.HasOne("IISPI.BD.Data.Entity.FrenteObra", "FrenteObra")
                        .WithMany("FrenteObraProfesionales")
                        .HasForeignKey("FrenteObraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IISPI.BD.Data.Entity.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FrenteObra");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.Item", b =>
                {
                    b.HasOne("IISPI.BD.Data.Entity.Unidad", "Unidad")
                        .WithMany()
                        .HasForeignKey("UnidadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Unidad");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.ItemControl", b =>
                {
                    b.HasOne("IISPI.BD.Data.Entity.Item", "Item")
                        .WithMany("ItemControles")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.ItemControlDoc", b =>
                {
                    b.HasOne("IISPI.BD.Data.Entity.ItemControl", "ItemControl")
                        .WithMany()
                        .HasForeignKey("ItemControlId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ItemControl");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.ItemControlParam", b =>
                {
                    b.HasOne("IISPI.BD.Data.Entity.ItemControl", "ItemControl")
                        .WithMany()
                        .HasForeignKey("ItemControlId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IISPI.BD.Data.Entity.Unidad", "Unidad")
                        .WithMany()
                        .HasForeignKey("UnidadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ItemControl");

                    b.Navigation("Unidad");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.ZonaProfesional", b =>
                {
                    b.HasOne("IISPI.BD.Data.Entity.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IISPI.BD.Data.Entity.Zona", "Zona")
                        .WithMany("ZonaProfesionales")
                        .HasForeignKey("ZonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Persona");

                    b.Navigation("Zona");
                });

            modelBuilder.Entity("IISPI.BD.Data.IISPIUser", b =>
                {
                    b.HasOne("IISPI.BD.Data.Entity.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("IISPI.BD.Data.IISPIUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("IISPI.BD.Data.IISPIUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IISPI.BD.Data.IISPIUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("IISPI.BD.Data.IISPIUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.Certificado", b =>
                {
                    b.Navigation("CertificadoItems");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.CertificadoItem", b =>
                {
                    b.Navigation("CertificadoItemControls");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.CertificadoItemControl", b =>
                {
                    b.Navigation("DocumentosControl");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.Contrato", b =>
                {
                    b.Navigation("ContratoItems");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.ContratoItem", b =>
                {
                    b.Navigation("ContratoItemControls");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.ContratoItemControl", b =>
                {
                    b.Navigation("Documentos");

                    b.Navigation("Parametros");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.Empresa", b =>
                {
                    b.Navigation("ContratoObras");

                    b.Navigation("EmpresaProfesionales");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.FrenteObra", b =>
                {
                    b.Navigation("FrenteObraProfesionales");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.Item", b =>
                {
                    b.Navigation("ItemControles");
                });

            modelBuilder.Entity("IISPI.BD.Data.Entity.Zona", b =>
                {
                    b.Navigation("Contratos");

                    b.Navigation("FrenteObras");

                    b.Navigation("ZonaProfesionales");
                });
#pragma warning restore 612, 618
        }
    }
}
